@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema> .
@prefix : <http://dblp.l3s.de/d2r/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix swrc: <http://swrc.ontoware.org/ontology#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .

@prefix xrr: <http://i3s.unice.fr/xr2rml#> .
@prefix rr:  <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
@prefix ex: <http://ex.org/bios/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# "target": ":authors/{_id} a :Author ; a foaf:Agent ; foaf:name {name}^^xsd:string ; foaf:homepage {homepage}^^xsd:string ; :hasCoauthor :authors/{coauthors.#._id} .

:source_author xrr:query "db.authors.find({})"; rml:iterator "$" ; xrr:uniqueRef "_id" .

<#Author_Author>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":authors/{_id}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [
           rr:constant :Author;
           rr:termType rr:IRI
        ]
    ].

<#Author_Agent>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":authors/{_id}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [
           rr:constant foaf:Agent;
           rr:termType rr:IRI
        ]
    ].

<#Author_name>
    a rr:TriplesMap;
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":authors/{_id}"];
    rr:predicateObjectMap [
        rr:predicate foaf:name;
        rr:objectMap [ xrr:reference "$.name" ]
    ].

<#Author_homepage>
    a rr:TriplesMap;
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":authors/{_id}"];
    rr:predicateObjectMap [
        rr:predicate foaf:homepage;
        rr:objectMap [ xrr:reference "$.homepage" ]
    ].

# "target": ":journals/{publications.article.#.dblp_key} a swrc:Journal ; a :JournalArticle ; a :Publication ; dc:creator :authors/{_id} ; dc:creator :authors/{publications.article.#.authors.#._id} ; dc:title {publications.article.#.title}^^xsd:string ; dcterms:issue {publications.article.#.year}^^xsd:integer ; :appearsIn {publications.article.#.in}^^xsd:string . "

# "target": ":journals/{$.publications.article[*].dblp_key} dc:creator :authors/{$._id} . "


<#Journal1>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":journals/{$.publications.article[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;        
        rr:objectMap [ rr:constant swrc:Journal; rr:termType rr:IRI]
    ].


<#Journal_JournalArticle>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":journals/{$.publications.article[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [ rr:constant :JournalArticle; rr:termType rr:IRI]
    ].

<#Journal_Publication>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":journals/{$.publications.article[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [ rr:constant :Publication; rr:termType rr:IRI]
    ].

<#Journal_creator>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":journals/{publications.article[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dc:creator;
        rr:objectMap [ rr:template ":authors/{_id}"; rr:termType rr:IRI]
    ].
    
:source_journal xrr:query "db.authors.find({})"; rml:iterator "$.publications.article.*" ; xrr:uniqueRef "dblp_key".

<#Journal_titler>
    xrr:logicalSource :source_journal ;
    rr:subjectMap [ rr:template ":journals/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dc:title;
        rr:objectMap [ xrr:reference "$.title" ]
    ].

<#Journal_issued>
    xrr:logicalSource :source_journal ;
    rr:subjectMap [ rr:template ":journals/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dcterms:issued;
        rr:objectMap [ xrr:reference "$.year" ]
    ].

<#Journal_appearsIn>
    xrr:logicalSource :source_journal ;
    
    rr:subjectMap [ rr:template ":journals/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate :appearsIn;
        rr:objectMap [ xrr:reference "$.in" ]
    ].

<#Journal_pages>
    xrr:logicalSource :source_journal ;
    rr:subjectMap [ rr:template ":journals/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate swrc:pages;
        rr:objectMap [ xrr:reference "$.pages" ]
    ].
<#Journal_homepage>
    xrr:logicalSource :source_journal ;
    rr:subjectMap [ rr:template ":journals/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate foaf:homepage;
        rr:objectMap [ xrr:reference "$.url" ]
    ].    

# ":inproceedings/{publications.inproceedings.#.dblp_key} a swrc:Conference ; a :ConferencePaper ; a :Publication ; dc:creator :authors/{_id} ; dc:title {publications.inproceedings.#.title}^^xsd:string ; dcterms:issued {publications.inproceedings.#.year}^^xsd:integer ; swrc:pages {publications.inproceedings.#.pages}^^xsd:string ; foaf:homepage {publications.inproceedings.#.url}^^xsd:string ; dcterms:partOf :proceedings/{publications.inproceedings.#.proceedings} . :proceedings/{publications.inproceedings.#.proceedings} a :Proceedings ; dc:title {publications.inproceedings.#.booktitle}^^xsd:string . "

<#Conference1>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":inproceedings/{publications.inproceedings[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;        
        rr:objectMap [ rr:constant swrc:Conference; rr:termType rr:IRI]
    ].


<#Conference_ConferencePaper>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":inproceedings/{publications.inproceedings[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [ rr:constant :ConferencePaper; rr:termType rr:IRI]
    ].

<#Conference_Publication>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":inproceedings/{publications.inproceedings[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [ rr:constant :Publication; rr:termType rr:IRI]
    ].

<#Conference_creator>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":inproceedings/{publications.inproceedings[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dc:creator;
        rr:objectMap [ rr:template ":authors/{_id}"; rr:termType rr:IRI]
    ].
    
:source_inproceedings xrr:query "db.authors.find({})"; rml:iterator "$.publications.inproceedings.*" ; xrr:uniqueRef "dblp_key".

<#Conference_titler>
    xrr:logicalSource :source_inproceedings ;
    rr:subjectMap [ rr:template ":inproceedings/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dc:title;
        rr:objectMap [ xrr:reference "$.title" ]
    ].

<#Conference_issued>
    xrr:logicalSource :source_inproceedings ;
    rr:subjectMap [ rr:template ":inproceedings/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dcterms:issued;
        rr:objectMap [ xrr:reference "$.year" ]
    ].

<#Conference_appearsIn>
    xrr:logicalSource :source_inproceedings ;
    rr:subjectMap [ rr:template ":inproceedings/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate :appearsIn;
        rr:objectMap [ xrr:reference "$.in" ]
    ].

<#Conference_pages>
    xrr:logicalSource :source_inproceedings ;
    rr:subjectMap [ rr:template ":inproceedings/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate swrc:pages;
        rr:objectMap [ xrr:reference "$.pages" ]
    ].
<#Conference_homepage>
    xrr:logicalSource :source_inproceedings ;
    rr:subjectMap [ rr:template ":inproceedings/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate foaf:homepage;
        rr:objectMap [ xrr:reference "$.url" ]
    ].    

<#inproceedings_partOf>
    xrr:logicalSource :source_inproceedings ;
    rr:subjectMap [ rr:template ":inproceedings/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dcterms:partOf;
        rr:objectMap [ rr:template ":proceedings/{$.proceedings}"; rr:termType rr:IRI]
    ].    
    
<#Proceedings>
    xrr:logicalSource :source_inproceedings ;
    rr:subjectMap [ rr:template ":proceedings/{$.proceedings}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [ rr:constant :Proceedings; rr:termType rr:IRI]        
    ].   

<#Proceedings_title>
    xrr:logicalSource :source_inproceedings ;
    rr:subjectMap [ rr:template ":proceedings/{$.proceedings}"];
    rr:predicateObjectMap [
        rr:predicate dc:title;
        rr:objectMap [ xrr:reference "$.booktitle" ]
    ].    

#"target": ":collections/{publications.incollection.#.dblp_key} a swrc:Collection ; a :BookChapter ; a :Publication ; dc:creator :authors/{_id} ; dc:title {publications.incollection.#.title}^^xsd:string ; dcterms:issued {publications.incollection.#.year}^^xsd:integer ; swrc:pages {publications.incollection.#.pages}^^xsd:string ; foaf:homepage {publications.incollection.#.url}^^xsd:string ; dcterms:partOf :books/{publications.incollection.#.proceedings} . :books/{publications.incollection.#.proceedings} a :Book ; dc:title {publications.incollection.#.booktitle}^^xsd:string . "

<#collection1>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":collections/{publications.inproceedings[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;        
        rr:objectMap [ rr:constant swrc:Collection; rr:termType rr:IRI]
    ].


<#collection_ConferencePaper>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":collections/{publications.inproceedings[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [ rr:constant :BookChapter; rr:termType rr:IRI]
    ].

<#collection_Publication>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":collections/{publications.inproceedings[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [ rr:constant :Publication; rr:termType rr:IRI]
    ].

<#collection_creator>
    xrr:logicalSource :source_author ;
    rr:subjectMap [ rr:template ":collections/{publications.inproceedings[*].dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dc:creator;
        rr:objectMap [ rr:template ":authors/{_id}"; rr:termType rr:IRI]
    ].
    
:source_incollection xrr:query "db.authors.find({})"; rml:iterator "$.publications.incollection.*" ; xrr:uniqueRef "dblp_key".

<#collection_titler>
    xrr:logicalSource :source_incollection ;
    rr:subjectMap [ rr:template ":collections/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dc:title;
        rr:objectMap [ xrr:reference "$.title" ]
    ].

<#collection_issued>
    xrr:logicalSource :source_incollection ;
    rr:subjectMap [ rr:template ":collections/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dcterms:issued;
        rr:objectMap [ xrr:reference "$.year" ]
    ].

<#collection_appearsIn>
    xrr:logicalSource :source_incollection ;
    rr:subjectMap [ rr:template ":collections/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate :appearsIn;
        rr:objectMap [ xrr:reference "$.in" ]
    ].

<#collection_pages>
    xrr:logicalSource :source_incollection ;
    rr:subjectMap [ rr:template ":collections/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate swrc:pages;
        rr:objectMap [ xrr:reference "$.pages" ]
    ].
<#collection_homepage>
    xrr:logicalSource :source_incollection ;
    rr:subjectMap [ rr:template ":collections/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate foaf:homepage;
        rr:objectMap [ xrr:reference "$.url" ]
    ].    

<#collection_partOf>
    xrr:logicalSource :source_incollection ;
    rr:subjectMap [ rr:template ":collections/{dblp_key}"];
    rr:predicateObjectMap [
        rr:predicate dcterms:partOf;
        rr:objectMap [ rr:template ":proceedings/{$.proceedings}"; rr:termType rr:IRI]
    ].    
    
<#Book>
    xrr:logicalSource :source_incollection ;
    rr:subjectMap [ rr:template ":proceedings/{$.proceedings}"];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [ rr:constant :Book; rr:termType rr:IRI]        
    ].   

<#Book_title>
    xrr:logicalSource :source_incollection ;
    rr:subjectMap [ rr:template ":proceedings/{$.proceedings}"];
    rr:predicateObjectMap [
        rr:predicate dc:title;
        rr:objectMap [ xrr:reference "$.booktitle" ]
    ].    
